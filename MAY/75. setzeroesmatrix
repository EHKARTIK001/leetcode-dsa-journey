class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
    int m = matrix.size();
    int  n = matrix[0].size();
    vector<int>row(m,0);
    vector<int>col(n , 0 );
    for(int i =  0 ; i<m  ; ++i){
for(int j = 0;  j<n  ;++j){
if(matrix[i][j]==0){
row[i] = 1; 
col[j]  = 1;
}
}
}       
for(int i = 0 ; i<m ; ++i){
for(int j =0 ; j< n ; ++j){
if(row[i]||col[j]){
 matrix[i][j]=0;
}
}
} 
    }
};
 SECOND APPROACH  
 class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
    bool frowimpact = false ; 
     bool fcolimpact = false ; 
     int  n = matrix[0].size();
     int  m = matrix.size();
     //ROW CHEAK 
     for(int col  = 0 ; col<n ; col++){
     if(matrix[0][col]==0){
     frowimpact = true ; 
     break ;
     }
     }
     //COL CHEAK 
    for(int row = 0 ; row<m  ; row++){
    if(matrix[row][0]==0){
    fcolimpact = true  ; 
    break ; 
    }
    }
    for(int i = 1 ; i<m ; i++){
    for(int j  =1  ; j<n ; j++){
    if(matrix[i][j]==0){
    matrix[i][0]=0 ; 
    matrix[0][j]= 0;
    }
    }
    }
    for(int i = 1 ; i<m ; i++){
    for(int j = 1 ; j< n ; j++){
    if(matrix[i][0]==0||matrix[0][j]==0){
    matrix[i][j]=0;
    }
    }
    }
    if(frowimpact){
    for(int j = 0 ; j<n ;j++){
    matrix[0][j]=0;
    }
    }
    if(fcolimpact){
    for(int i = 0 ; i<m ;i++){
    matrix[i][0]=0;
    }
    }

    }
};