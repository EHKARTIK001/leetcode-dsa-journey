THIS IS THE FIRST APPROACH USING RECURRSION .
ANOTHER VARIENT OF THIS QUESTION IS TOUGH BEACUSE OF IT CONSTRAINT .
class Solution {
public:
int solve(int countchild , int n , int limit){
    if(countchild==3){
        if(n==0) return 1;
        return 0 ;
    }
      int ways= 0 ;
    for(int i = 0 ; i<=limit ; i++){
    ways+=solve(countchild+1,n-i ,limit );
    }
    return ways ;
    }
    int distributeCandies(int n, int limit) {
  
    return solve(0 , n , limit);
    }
};
 THIS IS THE SECOND APPROACH OF THIS QUESTION IS QUESTION ITERTIVE 
 BY USING LOOPS T.C IS O(N*3)
 class Solution {
public:
    int distributeCandies(int n, int limit) {
    int ways = 0 ;
    for(int i = 0 ; i<=min(n , limit) ; i++){
    for(int j = 0  ; j< min(n-i  , limit ) ; j++ ){
    for(int k = 0 ; k<min(n-i-j , limit); k++){
    if(i+j+k==n)  ways++;
    }
    }
    }
    return ways ;
    }
};
 THIS IS THE THRID APPROACH OF THE QUESTION TO REDUCE THE COMPLEXTITY OF THE CODE CUDE TO SQUARE 
 class Solution {
public:
    int distributeCandies(int n, int limit) {
    int ways = 0 ;
    for(int i = 0 ; i<=min(n , limit) ; i++){
    for(int j = 0  ; j< min(n-i  , limit ) ; j++ ){
     int k  n - i - j ; 
     if(k>=0 && k<=Zlimit)
    if(i+j+k==n)  ways++;
 
    }
    }
    return ways ;
    }
};